import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

// üîπ Danh s√°ch tr·ªçng s·ªë theo nh√≥m c√¢u h·ªèi (ƒë√£ chia 100 ƒë·ªÉ th√†nh s·ªë th·∫≠p ph√¢n)
const weightedPercentages = {
    'C√¢u 1.1': 0.15,
    'C√¢u 1.2': 0.25,
    'C√¢u 1.3': 0.25,
    'C√¢u 1.4': 0.3,
    'C√¢u 1.5': 0.3,
    'C√¢u 1.6': 0.3,
    'C√¢u 1.7': 0.3,
    'C√¢u 1.8': 0.15,
    'C√¢u 1.9': 0.15,
    'C√¢u 1.10': 0.15,
    'C√¢u 1.11': 0.15,
    'C√¢u 1.12': 0.15,
};

async function updateWeightedPercentage() {
    try {
        for (const [questionName, percentage] of Object.entries(
            weightedPercentages
        )) {
            const updatedQuestion = await prisma.questions.updateMany({
                where: { question_name: questionName },
                data: { weighted_percentage: percentage },
            });

            if (updatedQuestion.count > 0) {
                console.log(
                    `‚úÖ C·∫≠p nh·∫≠t ${updatedQuestion.count} c√¢u h·ªèi: ${questionName} -> ${percentage}`
                );
            } else {
                console.log(`‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y c√¢u h·ªèi: ${questionName}`);
            }
        }
        console.log('‚úÖ Ho√†n th√†nh c·∫≠p nh·∫≠t weighted_percentage.');
    } catch (error) {
        console.error('‚ùå L·ªói khi c·∫≠p nh·∫≠t weighted_percentage:', error);
    }
}

// üèÉ‚Äç‚ôÇÔ∏è Ch·∫°y c·∫≠p nh·∫≠t
await updateWeightedPercentage();
