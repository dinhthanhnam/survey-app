generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model question_survey {
  id          Int       @id @default(autoincrement())
  survey_id   Int
  question_id Int
  surveys     surveys   @relation(fields: [survey_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "question_survey_ibfk_1")
  questions   questions @relation(fields: [question_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "question_survey_ibfk_2")

  @@index([question_id], map: "question_id")
  @@index([survey_id], map: "survey_id")
}

model questions {
  id               Int                     @id @default(autoincrement())
  question_name    String                  @db.VarChar(255)
  question_text    String                  @db.Text
  question_note    String?                 @db.Text
  question_type    questions_question_type
  question_target  Json?
  question_group   question_group[]
  question_options question_options[]
  question_survey  question_survey[]
  responses        responses[]
}

model respondents {
  id              Int                          @id @default(autoincrement())
  name            String                       @db.VarChar(255)
  email           String                       @unique(map: "email") @db.VarChar(255)
  phone           String                       @unique(map: "phone") @db.VarChar(255)
  auth_status     String                       @default("unauthorized") @db.VarChar(255)
  institution_id  Int
  belong_to_group respondents_belong_to_group?
  institutions    institutions                 @relation(fields: [institution_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "respondents_ibfk_1")
  responses       responses[]

  @@index([institution_id], map: "credit_fund_id")
}

model surveys {
  id                 Int               @id @default(autoincrement())
  survey_title       String            @db.Text
  survey_description String?           @db.Text
  institution_id     Int
  question_survey    question_survey[]
  institutions       institutions      @relation(fields: [institution_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "surveys_ibfk_1")

  @@index([institution_id], map: "institution_id")
}

model question_options {
  id           Int         @id @default(autoincrement())
  question_id  Int
  option_text  String      @db.VarChar(255)
  option_value Int?
  option_note  String?     @db.VarChar(255)
  questions    questions   @relation(fields: [question_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "question_options_ibfk_1")
  responses    responses[]

  @@index([question_id], map: "question_id")
}

model responses {
  id                 Int              @id @default(autoincrement())
  question_id        Int
  respondent_id      Int
  question_option_id Int
  question_options   question_options @relation(fields: [question_option_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_response_question_option")
  questions          questions        @relation(fields: [question_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "responses_ibfk_1")
  respondents        respondents      @relation(fields: [respondent_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "responses_ibfk_2")

  @@index([question_id], map: "question_id")
  @@index([respondent_id], map: "respondent_id")
  @@index([question_option_id], map: "fk_response_question_option")
}

model question_group {
  id          Int       @id @default(autoincrement())
  question_id Int
  questions   questions @relation(fields: [question_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "question_group_ibfk_1")

  @@index([question_id], map: "question_id")
}

model institutions {
  id            Int           @id @default(autoincrement())
  name          String        @db.VarChar(255)
  identity_code String        @unique(map: "identity_code") @db.VarChar(255)
  respondents   respondents[]
  surveys       surveys[]
}

model OtpToken {
  id        Int      @id @default(autoincrement())
  email     String
  otpHash   String
  expiresAt DateTime
}

enum questions_question_type {
  text
  radiogroup
  checkbox
  dropdown
  rating
  boolean
  date
  datetime
  file
  group
}

enum respondents_belong_to_group {
  Leader  @map("Lãnh đạo & Quản lý")
  Officer @map("Cán bộ nghiệp vụ")
  ITSup   @map("Nhân viên CNTT & Hỗ trợ kỹ thuật")
}
