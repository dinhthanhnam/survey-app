import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

// üü¢ T√¨m question_id t·ª´ question_name
async function getQuestionIdByName(questionName) {
    const question = await prisma.questions.findFirst({
        where: { question_name: questionName },
    });

    return question ? question.id : null;
}

// üü¢ C·∫≠p nh·∫≠t c√¢u h·ªèi d·ª±a v√†o question_name
async function updateQuestionByName(questionName, newData) {
    try {
        const updatedQuestion = await prisma.questions.updateMany({
            where: { question_name: questionName },
            data: newData,
        });

        console.log(`‚úÖ C·∫≠p nh·∫≠t th√†nh c√¥ng ${updatedQuestion.count} c√¢u h·ªèi.`);
    } catch (error) {
        console.error('‚ùå L·ªói khi c·∫≠p nh·∫≠t c√¢u h·ªèi:', error);
    }
}

// üü¢ C·∫≠p nh·∫≠t l·ª±a ch·ªçn theo question_name v√† option_value
async function updateOptionByQuestionName(questionName, optionValue, newData) {
    try {
        const questionId = await getQuestionIdByName(questionName);
        if (!questionId) {
            console.log(`‚ùå Kh√¥ng t√¨m th·∫•y c√¢u h·ªèi: ${questionName}`);
            return;
        }

        const updatedOption = await prisma.question_options.updateMany({
            where: {
                question_id: questionId,
                option_value: optionValue,
            },
            data: newData,
        });

        console.log(
            `‚úÖ C·∫≠p nh·∫≠t th√†nh c√¥ng ${updatedOption.count} l·ª±a ch·ªçn cho c√¢u h·ªèi: ${questionName}`
        );
    } catch (error) {
        console.error('‚ùå L·ªói khi c·∫≠p nh·∫≠t l·ª±a ch·ªçn:', error);
    }
}

// üü¢ C·∫≠p nh·∫≠t to√†n b·ªô l·ª±a ch·ªçn c·ªßa m·ªôt c√¢u h·ªèi theo question_name
async function updateAllOptionsForQuestionName(questionName, updatedOptions) {
    try {
        const questionId = await getQuestionIdByName(questionName);
        if (!questionId) {
            console.log(`‚ùå Kh√¥ng t√¨m th·∫•y c√¢u h·ªèi: ${questionName}`);
            return;
        }

        for (const option of updatedOptions) {
            await prisma.question_options.updateMany({
                where: {
                    question_id: questionId,
                    option_value: option.option_value,
                },
                data: {
                    option_text: option.option_text,
                    option_note: option.option_note || null,
                },
            });

            console.log(
                `‚úÖ L·ª±a ch·ªçn v·ªõi option_value ${option.option_value} ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t cho c√¢u h·ªèi: ${questionName}`
            );
        }
    } catch (error) {
        console.error('‚ùå L·ªói khi c·∫≠p nh·∫≠t c√°c l·ª±a ch·ªçn:', error);
    }
}

// üü¢ C·∫≠p nh·∫≠t c·∫£ c√¢u h·ªèi v√† danh s√°ch l·ª±a ch·ªçn theo question_name
async function updateQuestionAndOptions(
    questionName,
    questionData,
    updatedOptions
) {
    try {
        const questionId = await getQuestionIdByName(questionName);
        if (!questionId) {
            console.log(`‚ùå Kh√¥ng t√¨m th·∫•y c√¢u h·ªèi: ${questionName}`);
            return;
        }

        // ‚úÖ C·∫≠p nh·∫≠t c√¢u h·ªèi
        await updateQuestionByName(questionName, questionData);

        // ‚úÖ C·∫≠p nh·∫≠t danh s√°ch l·ª±a ch·ªçn
        await updateAllOptionsForQuestionName(questionName, updatedOptions);
    } catch (error) {
        console.error('‚ùå L·ªói khi c·∫≠p nh·∫≠t:', error);
    }
}

// üèÉ‚Äç‚ôÇÔ∏è Ch·∫°y th·ª≠ c·∫≠p nh·∫≠t d·ªØ li·ªáu
async function main() {
    // 1Ô∏è‚É£ C·∫≠p nh·∫≠t c√¢u h·ªèi v·ªõi question_name = "C√¢u 1.1"
    await updateQuestionByName('C√¢u 1.1', {
        question_text: 'N·ªôi dung m·ªõi cho C√¢u 1.1',
        question_note: 'Ghi ch√∫ m·ªõi cho C√¢u 1.1',
    });

    // 2Ô∏è‚É£ C·∫≠p nh·∫≠t m·ªôt l·ª±a ch·ªçn d·ª±a tr√™n question_name v√† option_value
    await updateOptionByQuestionName('C√¢u 1.11', 6, {
        option_text: 'ƒê√£ tri·ªÉn khai c√°c ch∆∞∆°ng tr√¨nh kh√°c',
        option_note: 'ngo√†i c√°c ch∆∞∆°ng tr√¨nh tr√™n',
    });

    await updateOptionByQuestionName('C√¢u 1.1', 2, {
        option_note: null, // X√≥a ghi ch√∫
    });

    // 3Ô∏è‚É£ C·∫≠p nh·∫≠t to√†n b·ªô l·ª±a ch·ªçn c·ªßa m·ªôt c√¢u h·ªèi theo question_name
    await updateAllOptionsForQuestionName('C√¢u 1.1', [
        {
            option_value: 1,
            option_text: 'Ch∆∞a c√≥ hi·ªÉu bi·∫øt v·ªÅ CƒêS',
            option_note: null,
        },
        {
            option_value: 2,
            option_text: 'Nh·∫≠n th·ª©c s∆° b·ªô, ch∆∞a hi·ªÉu r√µ l·ª£i √≠ch',
            option_note: null,
        },
        {
            option_value: 3,
            option_text: 'Nh·∫≠n th·ª©c ƒë∆∞·ª£c m·ªôt s·ªë n·ªôi dung c∆° b·∫£n',
            option_note: null,
        },
        {
            option_value: 4,
            option_text: 'Nh·∫≠n th·ª©c ƒë·∫ßy ƒë·ªß',
            option_note: null,
        },
        {
            option_value: 5,
            option_text: 'Hi·ªÉu s√¢u s·∫Øc',
            option_note: null,
        },
    ]);
    await updateAllOptionsForQuestionName('C√¢u 1.3', [
        {
            option_value: 1,
            option_text: 'Ho√†n to√†n kh√¥ng ƒë∆∞·ª£c ƒë√†o t·∫°o, kh√¥ng bi·∫øt v·ªÅ b·∫£o m·∫≠t',
            option_note: null,
        },
        {
            option_value: 2,
            option_text: 'ƒê∆∞·ª£c ƒë√†o t·∫°o nh∆∞ng ch∆∞a hi·ªÉu r√µ',
            option_note: null,
        },
        {
            option_value: 3,
            option_text: 'ƒê∆∞·ª£c ƒë√†o t·∫°o, hi·ªÉu m·ªôt s·ªë nguy√™n t·∫Øc c∆° b·∫£n',
            option_note: null,
        },
        {
            option_value: 4,
            option_text: 'ƒê∆∞·ª£c ƒë√†o t·∫°o, hi·ªÉu r√µ v√† b∆∞·ªõc ƒë·∫ßu tu√¢n th·ªß',
            option_note: null,
        },
        {
            option_value: 5,
            option_text:
                'ƒê∆∞·ª£c ƒë√†o t·∫°o, th√†nh th·∫°o v·ªÅ b·∫£o m·∫≠t v√† c√≥ th·ªÉ h∆∞·ªõng d·∫´n ng∆∞·ªùi kh√°c',
            option_note: null,
        },
    ]);
    await updateAllOptionsForQuestionName('C√¢u 1.6', [
        {
            option_value: 1,
            option_text: 'C√°c ch∆∞∆°ng tr√¨nh kh√¥ng h·ªØu √≠ch',
            option_note: null,
        },
        {
            option_value: 2,
            option_text:
                'C√≥ ch∆∞∆°ng tr√¨nh nh∆∞ng n·ªôi dung ch∆∞a th·ª±c t·∫ø, kh√≥ √°p d·ª•ng',
            option_note: null,
        },
        {
            option_value: 3,
            option_text: 'Ch∆∞∆°ng tr√¨nh c√≥ √≠ch nh∆∞ng ch∆∞a th·ª±c s·ª± hi·ªáu qu·∫£',
            option_note: null,
        },
        {
            option_value: 4,
            option_text:
                'Ch∆∞∆°ng tr√¨nh c√≥ n·ªôi dung ph√π h·ª£p, h·ªó tr·ª£ t·ªët cho c√¥ng vi·ªác',
            option_note: null,
        },
        {
            option_value: 5,
            option_text:
                'Ch∆∞∆°ng tr√¨nh hi·ªáu qu·∫£, gi√∫p n√¢ng cao nƒÉng l·ª±c th·ª±c t·∫ø ƒë√°ng k·ªÉ',
            option_note: null,
        },
    ]);
    await updateAllOptionsForQuestionName('C√¢u 1.7', [
        {
            option_value: 1,
            option_text: 'Ho√†n to√†n kh√¥ng h·ªó tr·ª£/h·ªó tr·ª£ kh√¥ng ƒë√°ng k·ªÉ',
            option_note: null,
        },
        {
            option_value: 2,
            option_text:
                'H·ªó tr·ª£ c√≤n h·∫°n ch·∫ø, ch∆∞a ƒë√°p ·ª©ng ƒë∆∞·ª£c nhu c·∫ßu th·ª±c t·∫ø',
            option_note: null,
        },
        {
            option_value: 3,
            option_text: 'H·ªó tr·ª£ kh√° ƒë·∫ßy ƒë·ªß nh∆∞ng √≠t th·ª±c t·∫ø',
            option_note: null,
        },
        {
            option_value: 4,
            option_text: 'H·ªó tr·ª£ kh√° ƒë·∫ßy ƒë·ªß v√† th·ª±c t·∫ø',
            option_note: null,
        },
        {
            option_value: 5,
            option_text:
                'H·ªó tr·ª£ r·∫•t ƒë·∫ßy ƒë·ªß, hi·ªáu qu·∫£ v√† s√°t v·ªõi nhu c·∫ßu th·ª±c t·∫ø',
            option_note: null,
        },
    ]);

    // 4Ô∏è‚É£ C·∫≠p nh·∫≠t c·∫£ c√¢u h·ªèi v√† t·∫•t c·∫£ l·ª±a ch·ªçn c√πng l√∫c
    await updateQuestionAndOptions(
        'C√¢u 1.10',
        {
            question_text:
                'Anh/ch·ªã ƒë√£ c√≥ nh·ªØng h√†nh ƒë·ªông c·ª• th·ªÉ n√†o ƒë·ªÉ th√∫c ƒë·∫©y chuy·ªÉn ƒë·ªïi s·ªë t·∫°i Qu·ªπ?',
        },
        [
            {
                option_value: 1,
                option_text:
                    'Ch∆∞a th·ª±c hi·ªán b·∫•t k·ª≥ h√†nh ƒë·ªông n√†o li√™n quan ƒë·∫øn chuy·ªÉn ƒë·ªïi s·ªë v√† kh√¥ng quan t√¢m ƒë·∫øn v·∫•n ƒë·ªÅ n√†y',
                option_note: null,
            },
            {
                option_value: 2,
                option_text:
                    'ƒê√£ nghe n√≥i v·ªÅ chuy·ªÉn ƒë·ªïi s·ªë nh∆∞ng ch·ªâ th·ª±c hi·ªán m·ªôt s·ªë c√¥ng vi·ªác nh·ªè nh∆∞ s·ª≠ d·ª•ng email, nh·∫≠p li·ªáu tr√™n ph·∫ßn m·ªÅm m√† ch∆∞a ch·ªß ƒë·ªông t√¨m hi·ªÉu ho·∫∑c √°p d·ª•ng th√™m',
                option_note: null,
            },
            {
                option_value: 3,
                option_text:
                    'C√≥ √°p d·ª•ng c√¥ng ngh·ªá v√†o c√¥ng vi·ªác h·∫±ng ng√†y nh∆∞ s·ª≠ d·ª•ng ph·∫ßn m·ªÅm n·ªôi b·ªô, khai th√°c d·ªØ li·ªáu s·ªë, nh∆∞ng ch∆∞a ch·ªß ƒë·ªông ƒë·ªÅ xu·∫•t ho·∫∑c tham gia c·∫£i ti·∫øn quy tr√¨nh s·ªë h√≥a',
                option_note: null,
            },
            {
                option_value: 4,
                option_text:
                    'Ch·ªß ƒë·ªông s·ª≠ d·ª•ng c√°c c√¥ng c·ª• c√¥ng ngh·ªá v√†o c√¥ng vi·ªác, h∆∞·ªõng d·∫´n ƒë·ªìng nghi·ªáp s·ª≠ d·ª•ng h·ªá th·ªëng s·ªë h√≥a v√† c√≥ ƒë√≥ng g√≥p trong c√°c s√°ng ki·∫øn chuy·ªÉn ƒë·ªïi s·ªë t·∫°i Qu·ªπ',
                option_note: null,
            },
            {
                option_value: 5,
                option_text:
                    'L√† ng∆∞·ªùi ti√™n phong trong chuy·ªÉn ƒë·ªïi s·ªë, ƒë·ªÅ xu·∫•t gi·∫£i ph√°p m·ªõi, th·ª≠ nghi·ªám v√† tri·ªÉn khai c√¥ng ngh·ªá v√†o c√¥ng vi·ªác, ƒë·ªìng th·ªùi h∆∞·ªõng d·∫´n ƒë·ªìng nghi·ªáp √°p d·ª•ng',
                option_note: null,
            },
        ]
    );
    await updateQuestionAndOptions(
        'C√¢u 1.12',
        {
            question_text:
                'Anh/Ch·ªã ƒë√°nh gi√° m·ª©c ƒë·ªô s·∫µn s√†ng c·ªßa ƒë·ªôi ng≈© l√£nh ƒë·∫°o trong vi·ªác ti·∫øp c·∫≠n v√† ·ª©ng d·ª•ng c√¥ng ngh·ªá s·ªë nh∆∞ th·∫ø n√†o?',
        },
        [
            {
                option_value: 1,
                option_text: 'Ho√†n to√†n kh√¥ng s·∫µn s√†ng',
                option_note: 'Kh√¥ng quan t√¢m',
            },
            {
                option_value: 2,
                option_text: 'Kh√¥ng s·∫µn s√†ng ',
                option_note: 'Quan t√¢m nh∆∞ng ch∆∞a c√≥ h√†nh ƒë·ªông',
            },
            {
                option_value: 3,
                option_text: 'Kh√° s·∫µn s√†ng',
                option_note: 'C√≥ nh·∫≠n th·ª©c nh∆∞ng c·∫ßn th√™m h·ªó tr·ª£',
            },
            {
                option_value: 4,
                option_text: 'S·∫µn s√†ng',
                option_note: 'ƒê√£ c√≥ h√†nh ƒë·ªông ban ƒë·∫ßu',
            },
            {
                option_value: 5,
                option_text: 'Ho√†n to√†n s·∫µn s√†ng',
                option_note: 'ƒêang t√≠ch c·ª±c tri·ªÉn khai & m·ªü r·ªông',
            },
        ]
    );
    await updateQuestionAndOptions(
        'C√¢u 3.5',
        {
            question_text:
                'Ngu·ªìn t√†i ch√≠nh hi·ªán t·∫°i d√†nh cho vi·ªác n√¢ng c·∫•p c∆° s·ªü h·∫° t·∫ßng CNTT c√≥ ƒë√°p ·ª©ng ƒë∆∞·ª£c y√™u c·∫ßu th·ª±c t·∫ø c·ªßa t·ªï ch·ª©c hay kh√¥ng?',
        },
        [
            {
                option_value: 1,
                option_text: 'Ho√†n to√†n kh√¥ng ƒë√°p ·ª©ng ƒë∆∞·ª£c',
            },
            {
                option_value: 2,
                option_text: '√çt ƒë√°p ·ª©ng ƒë∆∞·ª£c',
            },
            {
                option_value: 3,
                option_text: 'ƒê√°p ·ª©ng ƒë∆∞·ª£c m·ªôt ph·∫ßn',
            },
            {
                option_value: 4,
                option_text: 'Ph·∫ßn l·ªõn ƒë√°p ·ª©ng ƒë∆∞·ª£c',
            },
            {
                option_value: 5,
                option_text: 'ƒê√°p ·ª©ng ƒë∆∞·ª£c ho√†n to√†n',
            },
        ]
    );
    await updateQuestionAndOptions(
        'C√¢u 3.6',
        {
            question_text:
                'Qu·ªπ ƒë√£ c√≥ k·∫ø ho·∫°ch ho·∫∑c tri·ªÉn khai ·ª©ng d·ª•ng c√¥ng ngh·ªá ƒëi·ªán to√°n ƒë√°m m√¢y v√†o h·ªá th·ªëng CNTT hi·ªán t·∫°i ·ªü m·ª©c ƒë·ªô n√†o?',
        },
        [
            {
                option_value: 1,
                option_text: 'Ch∆∞a c√≥ k·∫ø ho·∫°ch tri·ªÉn khai',
            },
            {
                option_value: 2,
                option_text: 'ƒê√£ c√≥ k·∫ø ho·∫°ch nh∆∞ng ch∆∞a tri·ªÉn khai',
            },
            {
                option_value: 3,
                option_text: 'ƒê√£ tri·ªÉn ch√≠nh th·ª©c m·ªôt ph·∫ßn',
            },
            {
                option_value: 4,
                option_text:
                    'ƒê√£ tri·ªÉn khai ho√†n ch·ªânh nh∆∞ng ch∆∞a khai th√°c hi·ªáu qu·∫£',
            },
            {
                option_value: 5,
                option_text:
                    'ƒê√£ tri·ªÉn khai ho√†n ch·ªânh v√† ƒëang khai th√°c hi·ªáu qu·∫£',
            },
        ]
    );
    await updateQuestionAndOptions(
        'C√¢u 3.8',
        {
            question_text:
                'H·ªá th·ªëng Core ƒë√£ ƒë∆∞·ª£c tri·ªÉn khai v√† v·∫≠n h√†nh t·∫°i ƒë∆°n v·ªã anh/ch·ªã hi·ªán nay nh∆∞ th·∫ø n√†o?',
        },
        [
            {
                option_value: 1,
                option_text: 'Ch∆∞a tri·ªÉn khai H·ªá th·ªëng Core',
            },
            {
                option_value: 2,
                option_text: 'ƒê√£ tri·ªÉn khai H·ªá th·ªëng Core nh∆∞ng hi·ªáu qu·∫£ th·∫•p',
            },
            {
                option_value: 3,
                option_text:
                    'ƒê√£ tri·ªÉn khai H·ªá th·ªëng Core ƒë·∫°t ƒë∆∞·ª£c hi·ªáu qu·∫£ nh∆∞ mong ƒë·ª£i',
            },
            {
                option_value: 4,
                option_text:
                    'ƒê√£ tri·ªÉn khai H·ªá th·ªëng Core ƒë·∫°t ƒë∆∞·ª£c hi·ªáu qu·∫£ tr√™n mong ƒë·ª£i',
            },
            {
                option_value: 5,
                option_text:
                    'ƒê√£ tri·ªÉn khai H·ªá th·ªëng Core ƒë·∫°t ƒë∆∞·ª£c hi·ªáu qu·∫£ t·ªëi ∆∞u',
            },
        ]
    );
    await updateAllOptionsForQuestionName('C√¢u 4.4', [
        {
            option_value: 1,
            option_text: 'Ch∆∞a t·ª´ng t·ªï ch·ª©c ƒë√†o t·∫°o',
        },
        {
            option_value: 2,
            option_text: 'ƒê√£ c√≥ k·∫ø ho·∫°ch nh∆∞ng ch∆∞a th·ª±c hi·ªán ƒë√†o t·∫°o',
        },
        {
            option_value: 3,
            option_text: 'C√≥ t·ªï ch·ª©c ƒë√†o t·∫°o nh∆∞ng kh√¥ng theo ƒë·ªãnh k·ª≥',
            option_note: 'th·ªânh tho·∫£ng, kh√¥ng th∆∞·ªùng xuy√™n',
        },
        {
            option_value: 4,
            option_text: 'ƒê√†o t·∫°o th∆∞·ªùng xuy√™n nh∆∞ng ch∆∞a hi·ªáu qu·∫£',
        },
        {
            option_value: 5,
            option_text: 'ƒê√†o t·∫°o th∆∞·ªùng xuy√™n c√≥ hi·ªáu qu·∫£',
        },
        {
            option_value: 6,
            option_text:
                'T·ªï ch·ª©c ƒë√†o t·∫°o ƒë·ªãnh k·ª≥ hi·ªáu qu·∫£ t·ªët v√† s√°t v·ªõi th·ª±c ti·ªÖn c√¥ng vi·ªác',
        },
    ]);
    await updateAllOptionsForQuestionName('C√¢u 4.5', [
        {
            option_value: 1,
            option_text:
                'Kh√¥ng bi·∫øt c√°ch x·ª≠ l√Ω v√† kh√¥ng bi·∫øt c·∫ßn b√°o c√°o cho ai',
            option_note: null,
        },
        {
            option_value: 2,
            option_text:
                'Bi·∫øt c·∫ßn b√°o c√°o cho b·ªô ph·∫≠n IT nh∆∞ng kh√¥ng bi·∫øt r√µ quy tr√¨nh',
            option_note: null,
        },
        {
            option_value: 3,
            option_text: 'Bi·∫øt b√°o c√°o v√† hi·ªÉu r√µ quy tr√¨nh x·ª≠ l√Ω s·ª± c·ªë',
            option_note: null,
        },
        {
            option_value: 4,
            option_text:
                'C√≥ th·ªÉ th·ª±c hi·ªán c√°c bi·ªán ph√°p b·∫£o v·ªá c∆° b·∫£n tr∆∞·ªõc khi b√°o IT',
            option_note: null,
        },
        {
            option_value: 5,
            option_text:
                'Th√†nh th·∫°o x·ª≠ l√Ω s·ª± c·ªë v√† c√≥ th·ªÉ h∆∞·ªõng d·∫´n ƒë·ªìng nghi·ªáp',
            option_note: null,
        },
    ]);
    await updateAllOptionsForQuestionName('C√¢u 7.2', [
        {
            option_value: 1,
            option_text: 'Ho√†n to√†n kh√¥ng ƒë√°p ·ª©ng ƒë∆∞·ª£c',
            option_note: null,
        },
        {
            option_value: 2,
            option_text: '√çt ƒë√°p ·ª©ng ƒë∆∞·ª£c',
            option_note: null,
        },
        {
            option_value: 3,
            option_text: 'Ch·ªâ ƒë·ªß ƒë·ªÉ duy tr√¨ c√°c ho·∫°t ƒë·ªông v·∫≠n h√†nh c∆° b·∫£n',
            option_note: null,
        },
        {
            option_value: 4,
            option_text:
                'ƒê·ªß ƒë√°p ·ª©ng c√°c ho·∫°t ƒë·ªông v√† d·ª± √°n hi·ªán t·∫°i, nh∆∞ng c·∫ßn b·ªï sung th√™m ng√¢n s√°ch n·∫øu mu·ªën m·ªü r·ªông',
            option_note: null,
        },
        {
            option_value: 5,
            option_text:
                'Ho√†n to√†n ƒë√°p ·ª©ng ƒë·ªß v√† s·∫µn s√†ng cho vi·ªác m·ªü r·ªông, ph√°t tri·ªÉn th√™m',
            option_note: null,
        },
    ]);
    await updateQuestionAndOptions(
        'C√¢u 7.3',
        {
            question_text:
                'Qu·ªπ vui l√≤ng cho bi·∫øt m·ª©c ƒë·ªô s·∫µn s√†ng c·ªßa ƒë∆°n v·ªã trong vi·ªác b·ªï sung ng√¢n s√°ch ƒë·ªÉ ƒë·∫ßu t∆∞ v√†o c√¥ng ngh·ªá v√† chuy·ªÉn ƒë·ªïi s·ªë trong th·ªùi gian t·ªõi',
        },
        [
            {
                option_value: 1,
                option_text: 'Ho√†n to√†n kh√¥ng s·∫µn s√†ng',
            },
            {
                option_value: 2,
                option_text: '√çt s·∫µn s√†ng ',
            },
            {
                option_value: 3,
                option_text: 'ƒêang c√¢n nh·∫Øc, ch∆∞a c√≥ k·∫ø ho·∫°ch c·ª• th·ªÉ',
            },
            {
                option_value: 4,
                option_text: 'S·∫µn s√†ng ƒë·∫ßu t∆∞ khi c√≥ ƒëi·ªÅu ki·ªán thu·∫≠n l·ª£i',
            },
            {
                option_value: 5,
                option_text: 'Ho√†n to√†n s·∫µn s√†ng, ƒë√£ c√≥ k·∫ø ho·∫°ch r√µ r√†ng',
            },
        ]
    );
    await updateAllOptionsForQuestionName('C√¢u 8.1', [
        {
            option_value: 1,
            option_text: '10% - 20%',
        },
        {
            option_value: 2,
            option_text: '30% - 50%',
        },
        {
            option_value: 3,
            option_text: '60% - 70%',
        },
        {
            option_value: 4,
            option_text: '80% - 90%',
        },
        {
            option_value: 5,
            option_text: '95 % - 100%',
        },
    ]);
}

// üèÉ‚Äç‚ôÇÔ∏è Ch·∫°y script
main()
    .catch(console.error)
    .finally(() => prisma.$disconnect());
