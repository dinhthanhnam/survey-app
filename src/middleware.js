import { NextResponse } from "next/server";
import { verifyToken } from "@/utils/auth";

export const config = {
    matcher: ["/", "/admin/:path*", "/auth"],
};

export async function middleware(req) {
    const token = req.cookies.get("token")?.value;

    console.log("üîç Debug Middleware:");
    console.log("üç™ Token from Cookie:", token);

    const user = token ? await verifyToken(token) : null;
    const url = req.nextUrl.pathname;
    if (!user) {
        console.log("‚ùå Kh√¥ng c√≥ token h·ª£p l·ªá! Ch·∫∑n v√†o route:", url);
        if (url.startsWith("/auth")) return NextResponse.next();
        return NextResponse.redirect(new URL("/auth", req.url));
    }

    if (user.auth_status === "admin") {
        if (!url.startsWith("/admin")) {
            console.log("‚ùå Admin kh√¥ng th·ªÉ v√†o:", url);
            return NextResponse.redirect(new URL("/admin/dashboard", req.url)); // ƒêi·ªÅu h∆∞·ªõng v·ªÅ trang ch√≠nh c·ªßa admin
        }
    } else {
        if (url.startsWith("/admin")) {
            console.log("‚ùå Ng∆∞·ªùi d√πng kh√¥ng ph·∫£i admin!");
            return NextResponse.redirect(new URL("/", req.url));
        }
    }

    console.log("‚úÖ Token h·ª£p l·ªá! Cho ph√©p v√†o:", url);
    return NextResponse.next();
}
